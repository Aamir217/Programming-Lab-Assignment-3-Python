import string
from collections import defaultdict

def preprocess_text(text):
    text = text.lower()
    text = text.translate(str.maketrans('', '', string.punctuation))
    return text

def count_word_frequencies(file_path):
    word_count = defaultdict(int)

    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            for line in file:
                line = preprocess_text(line)
                words = line.split()
                for word in words:
                    if word:
                        word_count[word] += 1

    except FileNotFoundError:
        print(f"Error: The file '{file_path}' was not found.")
    except Exception as e:
        print(f"An error occurred: {e}")

    return dict(word_count)

file_path = './large_text_file.txt' 
word_frequencies = count_word_frequencies(file_path)

for word, freq in word_frequencies.items():
    print(f"{word}: {freq}")
